

@mixin background-img($img, $bgcolor: transparent) {
  background-color: $bgcolor;
  background-image: url('${url-root}/${img}');
  background-position: 0 0;
  background-repeat: no-repeat;
}


@mixin display($type: block, $alignment: top) {
  display: $type;

  @if $type == inline-block {
    vertical-align: $alignment;
  }

  @if $type == flex {
    flex-wrap: wrap;
    // justify-content: space-between;
    justify-content: space-around;

    @if $alignment == top {
      align-items: flex-start;
    }
    @else {
      align-items: $alignment;
    }
  }
}

@mixin position($type: relative) {
  position: $type;
}

// Blocks
@mixin block {
  display: block;
}

@mixin inline-block($alignment: top) {
  display: inline-block;
  vertical-align: $alignment;
}

@mixin inline {
  display: inline;
}

@mixin relative {
  position: relative;
}

@mixin absolute {
  position: absolute;
}

@mixin fixed {
  position: fixed;
}

@mixin flex-item($size: 1, $alignment: top) {
  // align-self: $alignment;
  flex-grow: $size;
}

// Positioning
@mixin center {
  @include display(block);
  margin-left: auto;
  margin-right: auto;
}

@mixin centerize {
  @include center;
  max-width: map-get($responsive-sizes, desktop);
  width: 90%;

  @include responsive(phone) {
    width: 95%;
  }
}

@mixin text-center {
  text-align: center;
}

@mixin text-right {
  text-align: right;
}


.right {
  @include text-right;
}

@mixin z($n) {
  z-index: $n;
}

// Disappearing
// sass-lint:disable no-important
.hide {
  display: none !important;
}


// sass-lint:disable no-qualifying-elements, force-element-nesting
img.auto-scale {
  @include padding(2);
  width: 100%;
}
